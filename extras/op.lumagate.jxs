<jittershader name="lumasker">
	<description>
	luminance threshold alpha generation
	</description>
	<param name="lum" type="vec2" default="0. 1." />
	<param name="tex0" type="int" default="0" />
	<language name="glsl" version="1.0">
		<bind param="lum" program="fp" />
		<bind param="tex0" program="fp" />	
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

//setup for single texture
varying vec2 texcoord0;
uniform sampler2DRect tex0;

//luma threshold
uniform vec2 lum;
const vec4 lumcoeff = vec4(0.299,0.587,0.114,0.);


void main()
{   

	vec4 a = texture2DRect(tex0, texcoord0);

	// calculate our luminance
	float luminance = dot(a,lumcoeff);
	
	// compare to the thresholds
	float clo = step(lum.x,luminance); 
	float chi = step(luminance,lum.y);
	
	//combine the comparisons
	float amask = clo * chi;

	// output texture with alpha-mask
	gl_FragColor = vec4(amask);
}
]]>
		</program>
	</language>
</jittershader>
